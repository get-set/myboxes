# -*- mode: ruby -*-
# vi: set ft=ruby :

vms = {
  :node1 => ['1', '1024', '10.1.0.101'],
  :node2 => ['2', '1024', '10.1.0.102'],
  :node3 => ['1', '1536', '10.1.0.103'],
}

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/xenial64"
  # config.vm.box_url = "http://boxrepo.io/test.box"
  # config.vm.box_url = "file:///tmp/test.box"

  config.vm.box_check_update = false

  # config.vm.synced_folder "../data", "/vagrant_data"

  config.vm.provider "virtualbox" do |vb|
    # vb.gui = true
    vb.cpus = 2
    vb.memory = "1024"
    vb.customize ["modifyvm", :id, "--groups", "/templates"]
  end

  # config.vm.provision "begin", type: "shell", inline: "echo \"Begin provisioning...\""
 
  # vagrant 1.7 后可以给provision取名
  # config.vm.provision "bootstrap", type: "shell" do |s|
  #   s.inline = "echo $1"
  #   s.args = ["hello, world!"]
  # end

  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y git
  # SHELL

  # config.vm.post_up_message = "启动成功！"

### multinode
  config.vm.define "node0" do |node0|
    node0.vm.hostname = "node0"

    node0.vm.network "private_network", ip: "10.1.0.100"
  
    # node0.vm.network "public_network", ip: "192.168.0.234"

    node0.vm.provider "virtualbox" do |vb|
      vb.name = "node0"
    end

     node0.vm.provision "shell", inline: "echo \"Provisioning node0 with IP:100.1.0.100\""
  end

  # Loop creation
  vms.each do |m_name, m_config|
    config.vm.define "#{m_name}" do |m|
      m.vm.hostname = "#{m_name}"
      m.vm.network "private_network", ip: "#{m_config[2]}"
      m.vm.provider "virtualbox" do |vb|
        vb.name = "#{m_name}"
        vb.memory = "#{m_config[1]}"
        vb.cpus = "#{m_config[0]}"
      end
      m.vm.provision "shell" do |s|
        s.inline = "echo \"Provisioning $1 with IP:$2\""
        s.args = ["#{m_name}","#{m_config[2]}"]
      end
    end
  end

  # 这个provison将在每个node的provison之前执行
  config.vm.provision "begin", type: "shell", inline: "echo \"Before each nodes\' provisioning...\""

end
